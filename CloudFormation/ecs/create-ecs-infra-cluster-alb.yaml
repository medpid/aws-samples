AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation template to create IAM Roles for ECS Fargate.

Resources:

  EcsClusterName:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: "ngInxCluster"

  myELBname:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "ECS-services"
      Scheme: internal
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets:
        - !ImportValue "Subnet1"
        - !ImportValue "Subnet2"
      HealthCheck:
        Target: TCP:port or HTTPS|HTTP:80/
        HealthyThreshold: 5
        Interval: 2
        Timeout: 30
        UnhealthyThreshold: 5

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref myELBname
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: Default
      VpcId: !Ref "ECSVPC"
      Protocol: "HTTP"
      Port: "80"

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Load Balancer SG
      GroupDescription: Load Balancer SG
      VpcId: !ImportValue "ECSVPC"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: ELBSecurityGroup
  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "apis"
      RetentionInDays: 7

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue "ECSVPC"
      GroupDescription: for ecs containers
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref "LoadBalancerSecurityGroup"
          IpProtocol: -1

Outputs:
  EcsClusterName:
    Value: !Ref EcsClusterName
    Export:
      Name: "EcsClusterName"

  Listener:
    Description: Listener Port 80
    Value: !Ref LoadBalancerListener
    Export:
      Name: "Listener"

  ContainerSecurityGroup:
    Description: Container Security Group
    Value: !Ref ContainerSecurityGroup
    Export:
      Name: "ContainerSecurityGroup"

  LoadBalancerDNS:
    Description: ""
    Value: !GetAtt myELBname.DNSName
    Export:
      Name: "DomainName"
